<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Johns Hopkins University
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.pass</groupId>
        <artifactId>pass-support</artifactId>
        <version>1.6.0-SNAPSHOT</version>
    </parent>

    <artifactId>pass-notification-service</artifactId>

    <developers>
        <developer>
            <name>Elliot Metsger</name>
            <email>emetsger@jhu.edu</email>
            <organization>Johns Hopkins University, Sheridan Libraries, Digital Research and Curation Center</organization>
            <organizationUrl>https://www.library.jhu.edu/library-departments/digital-research-curation-center/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/eclipse-pass/notification-services.git</connection>
        <developerConnection>scm:git:https://github.com/eclipse-pass/notification-services.git</developerConnection>
        <url>https://github.com/eclipse-pass/notification-services</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Properties for dependency versions -->
        <spring-boot-maven-plugin.version>3.2.1</spring-boot-maven-plugin.version>
        <lombok.version>1.18.30</lombok.version>
        <logback.version>1.4.14</logback.version>
        <slf4j.version>2.0.7</slf4j.version>
        <javax-mail.version>2.0.1</javax-mail.version>
        <commons-io.version>2.15.1</commons-io.version>
        <commons-lang.version>3.14.0</commons-lang.version>
        <handlebars.version>4.3.1</handlebars.version>
        <amazon.sqs.version>2.1.1</amazon.sqs.version>
        <junit.jupiter.version>5.10.1</junit.jupiter.version>
        <testcontainers.version>1.19.4</testcontainers.version>
        <greenmail-junit5.version>2.0.1</greenmail-junit5.version>
        <javax-json.version>1.1.4</javax-json.version>
        <maven-model.version>3.9.6</maven-model.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.eclipse.pass</groupId>
            <artifactId>pass-data-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-artemis</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>${handlebars.version}</version>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>amazon-sqs-java-messaging-lib</artifactId>
            <version>${amazon.sqs.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-maven-plugin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>${javax-mail.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.icegreen</groupId>
            <artifactId>greenmail-junit5</artifactId>
            <version>${greenmail-junit5.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax-json.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>localstack</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>${maven-model.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
                <configuration>
                    <mainClass>org.eclipse.pass.notification.NotificationApp</mainClass>
                    <finalName>pass-notification-service</finalName>
                    <classifier>exec</classifier>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>ghcr.io/eclipse-pass/pass-notification-service:%v</name>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>build-after-its</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-dependency-convergence</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <dependencyConvergence>
                                    <excludes>
                                        <!-- These are all transitive dependencies  -->
                                        <exclude>io.netty::</exclude>
                                        <exclude>jakarta.xml.bind:jakarta.xml.bind-api:</exclude>
                                        <exclude>org.jetbrains.kotlin:kotlin-stdlib:</exclude>
                                        <exclude>org.jetbrains.kotlin:kotlin-stdlib-jdk8:</exclude>
                                        <exclude>org.junit.jupiter:junit-jupiter-api:</exclude>
                                        <exclude>org.hamcrest:hamcrest:</exclude>
                                        <exclude>net.minidev:json-smart:</exclude>
                                        <exclude>commons-codec:commons-codec:</exclude>
                                        <exclude>com.squareup.okio:okio:</exclude>
                                        <exclude>net.bytebuddy:byte-buddy:</exclude>
                                        <!-- These are all transitive dependencies, but 2.0.7 is closest -->
                                        <exclude>org.slf4j:slf4j-api:</exclude>
                                    </excludes>
                                </dependencyConvergence>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze-dependencies</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <phase>test-compile</phase>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoredDependencies>
                                <!-- These come from bundled jars -->
                                <ignoredDependency>org.springframework*::</ignoredDependency>
                                <ignoredDependency>software.amazon.awssdk::</ignoredDependency>
                            </ignoredDependencies>
                            <ignoredUsedUndeclaredDependencies>
                                <!-- These come from spring boot starter json -->
                                <ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core::</ignoredUsedUndeclaredDependency>
                                <!-- These come from spring boot starter aop -->
                                <ignoredUsedUndeclaredDependency>org.aspectj::</ignoredUsedUndeclaredDependency>
                                <!-- These come from spring boot starter mail -->
                                <ignoredUsedUndeclaredDependency>org.eclipse.angus:jakarta.mail:</ignoredUsedUndeclaredDependency>
                                <!-- These come from spring boot starter test -->
                                <ignoredUsedUndeclaredDependency>org.mockito::</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.awaitility::</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.junit.jupiter::</ignoredUsedUndeclaredDependency>
                                <!-- These come from testcontainers junit-jupiter -->
                                <ignoredUsedUndeclaredDependency>org.testcontainers::</ignoredUsedUndeclaredDependency>
                                <!-- These come from amazon sqs java messaging -->
                                <ignoredUsedUndeclaredDependency>jakarta.jms::</ignoredUsedUndeclaredDependency>
                                <!-- These come from greenmail junit5 -->
                                <ignoredUsedUndeclaredDependency>com.icegreen:greenmail:</ignoredUsedUndeclaredDependency>
                            </ignoredUsedUndeclaredDependencies>
                            <ignoredUnusedDeclaredDependencies>
                                <!-- slf4j is the API used in the code, logback is the logging provider not used directly -->
                                <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic:</ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
